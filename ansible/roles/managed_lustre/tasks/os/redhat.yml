---
- name: Install Managed Lustre Client Repo
  ansible.builtin.yum_repository:
    name: "lustre-client-rocky-{{ ansible_distribution_major_version }}"
    description: "Lustre Client"
    baseurl: '{{ managed_lustre_repo_url }}'
    enabled: true
    gpgcheck: false
  become: yes

- name: Temporarily disable kernel exclusion
  ansible.builtin.lineinfile:
    path: /etc/yum.repos.d/rocky.repo
    regexp: '^(exclude=.*kernel.*)$'
    line: '# \1'
    backrefs: true
  register: kernel_exclude
  become: yes

- name: Install Kernel and Lustre Client
  ansible.builtin.dnf:
    name: "{{ ['kernel', 'kernel-devel'] + managed_lustre_packages }}"
    state: present
    update_cache: true
    disablerepo: "*"
    enablerepo: "lustre-client-rocky-{{ ansible_distribution_major_version }},baseos,appstream"
  register: lustre_install
  become: true

- name: Force regeneration of initramfs for the newly installed kernel
  ansible.builtin.command:
    cmd: dracut --force --kver {{ kernel_version }}
  vars:
    kernel_package: "{{ lustre_install.results | selectattr('name', 'equalto', 'kernel') | list | first }}"
    kernel_version: "{{ kernel_package.version }}-{{ kernel_package.release }}.{{ kernel_package.arch }}"
  when: lustre_install.changed
  become: yes

- name: Re-enable kernel exclusion
  ansible.builtin.lineinfile:
    path: /etc/yum.repos.d/rocky.repo
    regexp: '^# (exclude=.*kernel.*)$'
    line: '\1'
    backrefs: true
  when: kernel_exclude.changed
  become: yes

# - name: Reboot if kernel or lustre was updated
#   block:
#     - name: Rebooting...
#       ansible.builtin.command: /sbin/reboot
#       async: 1
#       poll: 0

#     - name: Wait for system to become reachable after reboot
#       ansible.builtin.wait_for_connection:
#         connect_timeout: 20
#         sleep: 5
#         delay: 5
#         timeout: 300
#   when: lustre_install.changed
#   become: yes
